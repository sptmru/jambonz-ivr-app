name: CI Pipeline

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' || github.event_name == 'push'
    strategy:
      matrix:
        node: ['20.11.1']
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
      - name: Install dependencies
        run: npm install
      - name: Lint code
        run: npm run lint --if-present
      - name: Check for ESLint errors
        run: npm run lint -- --max-warnings=0
  prettier-format:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' || github.event_name == 'push'
    strategy:
      matrix:
        node: ['20.11.1']
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
      - name: Install dependencies
        run: npm install
      - name: Format code
        run: npm run format
  deploy:
    name: Deploy to staging server
    runs-on: ubuntu-latest
    needs: [lint, prettier-format]
    if: github.event_name == 'push'
    steps:
      - name: install ssh keys
        run: |
          install -m 600 -D /dev/null ~/.ssh/id_rsa
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          ssh-keyscan -H ivr-app.sptm.space > ~/.ssh/known_hosts
      - name: connect and pull
        run: ssh root@ivr-app.sptm.space "cd /opt/jambonz-ivr-app && git checkout main && git pull && docker compose up -d --build ivr-app && exit"
      - name: cleanup
        run: rm -rf ~/.ssh
