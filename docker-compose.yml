services:
  rabbitmq:
    image: 'rabbitmq:3.13-management'
    restart: unless-stopped
    environment:
      RABBITMQ_ERLANG_COOKIE: ${RABBITMQ_ERLANG_COOKIE:-SWQOKODSQALRPCLNMEQG}
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER:-rabbitmq}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD:-rabbitmq}
      RABBITMQ_DEFAULT_VHOST: '/'
    healthcheck:
      test: rabbitmq-diagnostics check_port_connectivity
      interval: 1s
      timeout: 3s
      retries: 30
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    ports:
      - '15672:15672'
      - '5672:5672'
  redis:
    image: redis/redis-stack-server:7.2.0-v10
    restart: unless-stopped
    environment:
      REDIS_ARGS: '--requirepass ${REDIS_PASSWORD:-lnasdoifna0asd}'
    expose:
      - 6379
    healthcheck:
      test: ['CMD', 'redis-cli', '--raw', 'incr', 'ping']
    volumes:
      - redis_data:/data
  ivr-app:
    build:
      context: .
      dockerfile: Dockerfile
    entrypoint: ./docker-entrypoint.sh
    restart: unless-stopped
    environment:
      NEW_RELIC_LICENSE_KEY: ${NEW_RELIC_LICENSE_KEY}
      NEW_RELIC_APP_NAME: ${NEW_RELIC_APP_NAME}
    ports:
      - '${HTTP_PORT:-8080}:${HTTP_PORT:-8080}'
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:${HTTP_PORT}/api/v1/health']
      interval: 5s
      timeout: 15s
      retries: 5
      start_period: 3s
    depends_on:
      - rabbitmq
      - redis

volumes:
  rabbitmq_data: {}
  redis_data: {}
